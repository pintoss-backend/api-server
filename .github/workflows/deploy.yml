name: Docker Build and Deploy

on:
  push:
    branches:
      - dev # Action 트리거 브랜치

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Submodule
        uses: actions/checkout@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

#      - name: Set Application Properties
#        run: |
#          mkdir -p src/main/resources
#          echo "${{ secrets.APPLICATION_YAML }}" | base64 --decode > src/main/resources/application.yaml
#          echo "${{ secrets.APPLICATION_JWT_YAML }}" | base64 --decode > src/main/resources/application-jwt.yaml
#          echo "${{ secrets.APPLICATION_OAUTH_YAML }}" | base64 --decode > src/main/resources/application-oauth.yaml
#          echo "${{ secrets.APPLICATION_TEST_YAML }}" | base64 --decode > src/main/resources/application-test.yaml
#          find src

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # 디렉토리와 파일 구조 확인
      - name: Check Current Directory
        run: |
          echo "Current Directory:"
          pwd
          echo "Files and Folders:"
          ls -al

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/pintoss-auth:latest

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/pintoss-auth:latest
            sudo docker rm -f pintoss-auth
            sudo docker run -d -p 8080:8080 --name pintoss-auth ${{ secrets.DOCKER_HUB_USERNAME }}/pintoss-auth
            sudo docker image prune -a -f
