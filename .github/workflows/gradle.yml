# This workflow uses actions that are not certified by GitHub.
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
# They are provided by a third-party and are governed by

name: Gradle Test

on:
  push:
    branches: [ "main", "dev"]
  pull_request:
    branches: [ "main", "dev"]


permissions:
  contents: read

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
#
#      - name: Set Application Properties
#        run: |
#          mkdir -p src/main/resources
#          echo "${{ secrets.APPLICATION_YAML }}" | base64 --decode > src/main/resources/application.yaml
#          echo "${{ secrets.APPLICATION_JWT_YAML }}" | base64 --decode > src/main/resources/application-jwt.yaml
#          echo "${{ secrets.APPLICATION_OAUTH_YAML }}" | base64 --decode > src/main/resources/application-oauth.yaml
#          echo "${{ secrets.APPLICATION_TEST_YAML }}" | base64 --decode > src/main/resources/application-test.yaml
#          find src

      - name: Decode Gmail Credentials and create noreply.json
        env:
          GOOGLE_GMAIL: ${{secrets.GOOGLE_GMAIL}}
        run: |
          mkdir -p src/main/resources
          echo "$GOOGLE_GMAIL" | base64 --decode > src/main/resources/noreply.json

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test With Gradle
        run: ./gradlew --info test -Dspring.profiles.active=test
