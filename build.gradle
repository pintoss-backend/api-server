plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.pintoss'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'com.h2database:h2'

    implementation 'commons-codec:commons-codec:1.15' // Base64
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70' // SEED 암호화


    // email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // Apache POI
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

    // Google API 클라이언트
    implementation 'com.google.api-client:google-api-client:1.31.2' // 1.25.0과 호환 가능
    implementation 'com.google.apis:google-api-services-gmail:v1-rev110-1.25.0'

    // Gmail API
    implementation 'com.google.api-client:google-api-client:2.7.0'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.34.1'
    implementation 'com.google.apis:google-api-services-gmail:v1-rev20220404-2.0.0'

    // Jackson
    implementation 'com.google.http-client:google-http-client-jackson2:1.43.3'


    // 빌게이트 연동 라이브러리
    implementation files('libs/billgateAPI.jar')

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // Swagger
    implementation ('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2')

    // QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT
    compileOnly('io.jsonwebtoken:jjwt-api:0.11.1')
    runtimeOnly('io.jsonwebtoken:jjwt-impl:0.11.1', 'io.jsonwebtoken:jjwt-jackson:0.11.1')
    testImplementation('io.jsonwebtoken:jjwt-api:0.11.1')

    // WebClient
    implementation('org.springframework.boot:spring-boot-starter-webflux')
}

def querydslGenerated = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
    main {
        java {
            srcDirs += querydslGenerated
        }
    }
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = querydslGenerated
}

tasks.named('test') {
    useJUnitPlatform()
}
